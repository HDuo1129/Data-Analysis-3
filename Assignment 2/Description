# Building a Prediction Model on House Prices

**SIGN UP HERE TO PICK CITIES**

---

## Business Case

Your business case is to operate a chain of Airbnbs. You need a pricing model.

---

## Part I. Modelling

1. **Data Selection**  
   - Go to [Inside Airbnb](http://insideairbnb.com/) and pick a city. Your core dataset should have at least 10K rows.  
   - Go back in time and download listings data for an earlier quarter. (7p)  
   - Carry out data wrangling such as extracting amenities and imputing missing values.  
   - Think about the process before jumping in and explain your variable selection and feature engineering choices.  
   - You can use the code of the case study or AI for coding.

2. **Build 5 Different Predictive Models (7p)**  
   a. OLS  
   b. LASSO  
   c. Random Forest  
   d. Boosting of your choice  
   e. Something else of your choice (could be another boosting algorithm, or something else).

3. **Compare Models in Terms of Fit and Time (6p)**  
   - Create a horserace table.  
   - Discuss performance.

4. **Take Two Models (RF and a Boosting Model) and Analyze Them (5p)**  
   - Show feature importance.  
   - Compare the 10 most important features.  
   - Discuss your findings.

---

## Part II. Validity

5. **Let Us Have Two "Live" Datasets (5p)**

   A. Download another (later) date. Repeat data wrangling.  
   B. Download another city in the same country or region, with at least 3K observations. Repeat data wrangling.

6. **Use Your 5 Core Models on the A. Later Date and B. Other City Data (5p)**  
   - Compare model performance and discuss the experience.

---

## Grading (35pct)

1. See details at tasks.
2. For each task, we expect documentation and clean code, along with well-written discussion.
3. We expect a fully reproducible workflow:
   - **Data** used is stored in GitHub or on osf.io (or similar), and directly called from code.
   - The **environment** is set up so the project can be run from another computer without hassle.
4. **Delayed Submission**:
   - 0â€“24h delay = -25%
   - 24h+ delay = 0p

---

## AI Policy

- You can use AI for coding, code refactoring, and documentation.
- You can use AI for language editing and formatting.
- **You shall not use AI for other parts of the project.**
- You must check everything, as you are responsible for it all.
